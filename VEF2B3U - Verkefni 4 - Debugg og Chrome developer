// Verkefni 3 (6%)  DevTools og debugging 

/*  lesefni:
 *		Error Handling & Debugging, kafli 10 JavaScript & jQuery eftir Jon Duckett 
 *		
 *		Bugs and Error handling, kafli 8 http://eloquentjavascript.net/08_error.html 
 *    	
 *    	Jshint.com (debug tól) http://jshint.com/ 
 *    	
 *      http://www.sitepoint.com/proper-error-handling-javascript/
*/

  
// 1. - 3% 
// Discover DevTools, kláraðu Level 1- 4
// https://www.codeschool.com/courses/discover-devtools


// 2. - 0.5%  Scope
// Hvað prentast í console og afhverju
(function() {
   var a = b = 5;
})();

console.log(b);
Console prentar út 5 af því að VAR er að skilgreina bæði a og b sem 5 á sama tíma

// 3. - 0.5% - Hoisting
// Hver er niðurstaðan og afhverju
function test() {
   console.log(a);
   console.log(foo());
   
   var a = 1;
   function foo() {
      return 2;
   }
}

test(); Þetta prentar út 2 því að þegar "a" er kallað, þá hefur það ekki verið skilgreint. Functions er samt hægt að kalla á hvar sem er.

// 4. - 0.5% - this
// Hver er niðurstaðan, útskýrðu svar
var fullname = 'John Doe';
var obj = {
   fullname: 'Colin Ihrig',
   prop: {
      fullname: 'Aurelio De Rosa',
      getFullname: function() {
         return this.fullname;
      }
   }
};

console.log(obj.prop.getFullname());

var test = obj.prop.getFullname;
Hef ekki glóru


// 5. - 0.5%  
// Notaðu hér fyrir neðan "use strict" á viðeigandi stað og jshint þér til hjálpar
// a) hver er villan, b) afhverju er villa, c) lagaðu hana
function canYouSpotTheProblem() {
  for (var counter = 0; counter < 10; counter++)
    console.log("Happy happy");
}
canYouSpotTheProblem();
Það vantaði var til þess að skilgreina counter stakið.

// 6. - 0.5%
//a) hver er villan, b) afhverju er villa, c) lagaðu hana
function Person(name) { this.name = name; }
var ferdinand = Person("Ferdinand"); 
//console.log(name); 
console.log(ferdinand.name); 
Það er ekki hægt að kalla á name eitt og sér vegna þess að það er nested í functioninu


// 7. - 0.5%
//  Útskýrðu hvernig try og catch virkar hér í kóðanum, 
//  hvað gerir throw keyword og hvað gerist þegar það verður error (útskýra kóðaflæði)

function promptDirection(question) {
  var result = prompt(question, "");
  if (result.toLowerCase() == "left") return "L";
  if (result.toLowerCase() == "right") return "R";
  throw new Error("Invalid direction: " + result); //Throw býr til nýja villumeldingu
}

function look() {
  if (promptDirection("Which way?") == "L")
    return "a house";
  else
    return "two angry bears";
}

try {//Try tékkar hérna hvort svarið sé eitt af möguleikunum sem boðið er upp á í look() functioninu og ef það er ekki til, þá hendir það exception
  console.log("You see", look());
} catch (error) {
  console.log("Something went wrong: " + error);
}


/*
Skil:
Skilaðu lausnum á Innu
	
Námsmat:	
Gefið er full fyrir rétt og fullnægjandi svar og skýringu þegar það á við, 
ekkert ef svar eða skýring er ábótavant.

*/
